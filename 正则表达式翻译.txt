The special characters are:
    "."      Matches any character except a newline.
    #匹配除换行符之外的任意字符
    "^"      Matches the start of the string.
    #匹配字符串的头
    "$"      Matches the end of the string or just before the newline at
             the end of the string.
    #匹配字符串的结尾或换行符之前
    "*"      Matches 0 or more (greedy) repetitions of the preceding RE        
             Greedy means that it will match as many repetitions as possible.
    #匹配重复的数字或字符希望的意思是匹配可能的重复          
    "+"      Matches 1 or more (greedy) repetitions of the preceding RE.
    #
    "?"      Matches 0 or 1 (greedy) of the preceding RE.
    *?,+?,?? Non-greedy versions of the previous three special characters.
    {m,n}    Matches from m to n repetitions of the preceding RE.
    {m,n}?   Non-greedy version of the above.
    "\\"     Either escapes special characters or signals a special sequence.
    []       Indicates a set of characters.
             A "^" as the first character indicates a complementing set.
    "|"      A|B, creates an RE that will match either A or B.
    (...)    Matches the RE inside the parentheses.
             The contents can be retrieved or matched later in the string.
    (?iLmsux) Set the I, L, M, S, U, or X flag for the RE (see below).
    (?:...)  Non-grouping version of regular parentheses.
    (?P<name>...) The substring matched by the group is accessible by name.
    (?P=name)     Matches the text matched earlier by the group named name.
    (?#...)  A comment; ignored.
    (?=...)  Matches if ... matches next, but doesn't consume the string.
    (?!...)  Matches if ... doesn't match next.
    (?<=...) Matches if preceded by ... (must be fixed length).
    (?<!...) Matches if not preceded by ... (must be fixed length).
    (?(id/name)yes|no) Matches yes pattern if the group with id/name matched,
                       the (optional) no pattern otherwise.
 
The special sequences consist of "\\" and a character from the list
below.  If the ordinary character is not on the list, then the
resulting RE will match the second character.
    \number  Matches the contents of the group of the same number.
    #匹配相同数字的组的目录
    \A       Matches only at the start of the string.
    #仅在字符串的开头匹配
    \Z       Matches only at the end of the string.
    #仅在字符串的结尾匹配
    \b       Matches the empty string, but only at the start or end of a word.
    #匹配空字符串但仅仅在单词的开头和结尾处
    \B       Matches the empty string, but not at the start or end of a word.
    #匹配空字符串但不在单词的开头和结尾处
    \d       Matches any decimal digit; equivalent to the set [0-9].
    #匹配任何十进制数字；与[0-9]等效
    \D       Matches any non-digit character; equivalent to the set [^0-9].
    #匹配任何非数字字符；与[^0-9]等效
    \s       Matches any whitespace character; equivalent to [ \t\n\r\f\v].
    #匹配任何空格字符；等同于[ \t\n\r\f\v]
    \S       Matches any non-whitespace character; equiv. to [^ \t\n\r\f\v].
    #匹配任何非空格字符；等同于[^ \t\n\r\f\v]
    \w       Matches any alphanumeric character; equivalent to [a-zA-Z0-9_].
             With LOCALE, it will match the set [0-9_] plus characters defined
             as letters for the current locale.
    #匹配任何字母数字字符；等同于[a-zA-Z0-9_]         
    \W       Matches the complement of \w.
    \\       Matches a literal backslash.
 
This module exports the following functions:
    match    Match a regular expression pattern to the beginning of a string.
    search   Search a string for the presence of a pattern.
    sub      Substitute occurrences of a pattern found in a string.
    subn     Same as sub, but also return the number of substitutions made.
    split    Split a string by the occurrences of a pattern.
    findall  Find all occurrences of a pattern in a string.
    finditer Return an iterator yielding a match object for each match.
    compile  Compile a pattern into a RegexObject.
    purge    Clear the regular expression cache.
    escape   Backslash all non-alphanumerics in a string.
 
Some of the functions in this module takes flags as optional parameters:
    I  IGNORECASE  Perform case-insensitive matching.
    L  LOCALE      Make \w, \W, \b, \B, dependent on the current locale.
    M  MULTILINE   "^" matches the beginning of lines (after a newline)
                   as well as the string.
                   "$" matches the end of lines (before a newline) as well
                   as the end of the string.
    S  DOTALL      "." matches any character at all, including the newline.
    X  VERBOSE     Ignore whitespace and comments for nicer looking RE's.
    U  UNICODE     Make \w, \W, \b, \B, dependent on the Unicode locale.